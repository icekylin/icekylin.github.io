<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>icekylin7 Blog</title>
  
  
  <link href="http://icekylin.github.io/atom.xml" rel="self"/>
  
  <link href="http://icekylin.github.io/"/>
  <updated>2022-11-15T08:49:08.368Z</updated>
  <id>http://icekylin.github.io/</id>
  
  <author>
    <name>icekylin7</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于安全的一些学习经历</title>
    <link href="http://icekylin.github.io/2022/11/15/%E5%85%B3%E4%BA%8E%E5%AE%89%E5%85%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E5%AD%A6%E4%B9%A0%E7%BB%8F%E5%8E%86/"/>
    <id>http://icekylin.github.io/2022/11/15/%E5%85%B3%E4%BA%8E%E5%AE%89%E5%85%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E5%AD%A6%E4%B9%A0%E7%BB%8F%E5%8E%86/</id>
    <published>2022-11-15T08:44:00.000Z</published>
    <updated>2022-11-15T08:49:08.368Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>注意：此文不适合进阶学习，仅适合入门<br>很久以前学习过的一些网络安全相关知识，列出了一些知识点、大致的规划；方便快速上手]</p></blockquote><p>笔记不是刚需，但是当你第二次遇到同样简单的问题的时候，你还需要通过搜索引擎去查询，那不妨把简单的内容记录在笔记内，以供随时查阅参考。<br>因为是快速入门阶段，为快速了解体系，不会过多的深入原理。</p><h3 id="Stage-0-前置技能"><a href="#Stage-0-前置技能" class="headerlink" title="Stage 0 - 前置技能"></a>Stage 0 - 前置技能</h3><p>“一个不会编程的运维不是一个好的黑客”<br>学习安全需要搭建靶场、编写脚本、读懂代码，在正式学习之前，至少需要掌握以下几种能力</p><ul><li>虚拟机软件的使用（如 VMware、VirtualBox 等）</li><li>Linux操作系统基础（文件操作、目录切换、磁盘挂载、权限管理等）</li><li>简单服务的搭建（Apache&#x2F;Nginx、MySQL、PHP）</li></ul><p>对于虚拟机软件 Windows 下主要推荐使用 <strong>VMware Workstation</strong>，界面简单容易上手。服务的搭建可以使用集成软件如：<strong>Phpstudy</strong>、<strong>wampserver</strong> 等软件，只需要能正常访问即可。Linux 操作系统建议长期使用，熟悉在命令行对文件进行增删查改的操作。在掌握 Linux 基本命令之后对服务搭建的技能进行拓展，在 Linux 上搭建一个完整 Web Server 服务，通常是使用的是 <strong>Apache + MySQL + PHP</strong>，简称也就是 LAMP（Linux Apache MySQL PHP）。<br>关键词：<code>#Linux搭建LAMP``#VMware安装Linux</code> <code>#phpstudy搭建网站</code></p><h3 id="Stage-1-靶场学习"><a href="#Stage-1-靶场学习" class="headerlink" title="Stage 1 - 靶场学习"></a>Stage 1 - 靶场学习</h3><p>在掌握了基本服务的搭建技能后，可以通过搭建靶场来进行综合能力的学习，常见的靶场如 DVWA、Pikachu 都是不错的综合渗透测试靶场，这里以 <strong>DVWA</strong> 为例，可以通过 Phpstudy 或者 Linux 搭建 DVWA 靶场环境，在靶场内，需要学习的技能有如下</p><ul><li>Brute Force 暴力破解 <ul><li>使用 BurpSuite 利用字典进行暴力破解</li></ul></li><li>Command Injection 命令注入 <ul><li>需要掌握 Linux、Windows 操作系统下命令行的连接符使用</li></ul></li><li>CSRF<ul><li>#TODO</li></ul></li><li>File Inclusion 文件包含 <ul><li>需要对 PHP 读取文件的函数进行学习</li></ul></li><li>File Upload 文件上传 <ul><li>需要学习如何编写一个简单的后门程序，关键词为 一句话木马，针对 PHP 搭建的服务也就是 PHP一句话木马，需要使用 蚁剑、冰蝎等工具进行连接。这里推荐使用 <a href="https://github.com/AntSwordProject/antSword">蚁剑</a></li></ul></li><li>SQL Injection SQL注入 <ul><li>需要学习 SQL 基本语句，包括注释以及查询。</li></ul></li><li>XSS <ul><li>需要学习 JavaScript，如何利用 <code>&lt;script&gt;</code> 标签弹出提示框以及 Cookie</li></ul></li></ul><p>有关于靶场的学习内容，合理的利用搜索引可以轻松的获取到答案，针对 DVWA 的安全等级机制，不需要对 Medium、High、Impossible 的利用方式了然于心，但对于 Low 等级的利用方式，需要做到可以脱离任何资料而去利用。<br>关键词：<code>#phpstudy搭建DVWA``#DVWA WriteUp</code> <code>#DVWA 通关教程</code></p><h3 id="Stage-2-靶机渗透"><a href="#Stage-2-靶机渗透" class="headerlink" title="Stage 2 - 靶机渗透"></a>Stage 2 - 靶机渗透</h3><p>靶机渗透测试可以帮助你速成脚本小子，也可以让你初步了解渗透测试的基本流程，在这过程中可能会使用大量的工具辅助，以下为 DC:1 靶机作为参考的学习途径<br>下载地址：<a href="https://www.vulnhub.com/entry/dc-1,292/">https://www.vulnhub.com/entry/dc-1,292/</a></p><ol><li>VMware 或 VirtualBox 搭建靶机</li><li>网络环境正常后进行局域网存活扫描（常用的工具有 fping、arping、nmap）<ul><li><code>fping -aqg [网段/子网掩码]</code></li></ul></li><li>对靶机端口信息进行扫描 <ul><li><code>nmap -sV [Target_IP]</code></li></ul></li><li>针对 Web 服务使用 msfconsole 可利用模块 <ol><li>任意文件上传，使用蚁剑连接一句话木马</li><li>缓冲区溢出，获取目标系统 Shell</li></ol></li><li>利用 SUID 文件提升权限</li></ol><p>对靶机的渗透测试互联网上同样有大部分的参考实例，关键词为 <strong>靶机名称+WriteUp</strong> 或 <strong>靶机名称+Walkthrough</strong>，有过一次完整的打靶经验那我们就快速进入下一个阶段吧，不要过度迷恋这个感觉，毕竟靶机是打不完的。<br>工具的安装和使用并不会一帆风顺，有时需要查阅大部分的资料，对于不同环境的搭建又各有不同，可以使用集成的渗透测试系统如：Kali、Parrot等，这里推荐 <a href="https://www.kali.org/">Kali</a><br>关键词：<code>#DC-1 WriteUp``#VMware搭建DC-1``#VirtualBox搭建DC-1</code></p><h3 id="Stage-3-编程能力"><a href="#Stage-3-编程能力" class="headerlink" title="Stage 3 - 编程能力"></a>Stage 3 - 编程能力</h3><p>在愉快的脚本小子生活结束后，不要忘了巩固你的编程能力，有几门常用的语言适合作为渗透测试的辅助语言如 Python，Shell，下面推荐几个简单的脚本快速理解<br>Shell 局域网存活扫描</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">for i in &#123;1..254&#125;</span><br><span class="line">  do</span><br><span class="line">      (if ping -c 1 -W 1 10.110.2.$i &amp;&gt; /dev/null;then # 替换IP段为自身所处的IP段</span><br><span class="line">          echo &quot;10.110.2.$i is up&quot;</span><br><span class="line">      fi)&amp;</span><br><span class="line">  done</span><br><span class="line">wait</span><br></pre></td></tr></table></figure><p>Python 获取目标banner</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">s = socket.socket()</span><br><span class="line">s.connect((<span class="string">&quot;198.46.152.109&quot;</span>,<span class="number">22</span>)) <span class="comment"># 198.46.152.109 是我的 vps 地址，22对应的服务是 SSH</span></span><br><span class="line">banner = s.recv(<span class="number">1024</span>)</span><br><span class="line"><span class="built_in">print</span>(banner)</span><br></pre></td></tr></table></figure><p>Python 端口扫描</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> port <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">        s.connect((<span class="string">&quot;198.46.152.109&quot;</span>,port)) </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[+] Port:%d Open&#x27;</span> % port)</span><br><span class="line">        s.close()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[-] Port:%d Close&#x27;</span> % port)</span><br></pre></td></tr></table></figure><p>编程语言的学习入门通常需要掌握数据结构，循环，错误处理。对于 Python 还需要掌握一些模块，如上面使用到的 socket、requets 等。除此之外还有一些可能会用到的语言如 Go、Java、C，因为 Python 是一门很适合编写工具的脚本语言，所以暂时不对其他语言做深入了解（当然如果你有其他方面的能力也可以直接运用在网络编程的领域）</p><h3 id="Stage-4-综合能力"><a href="#Stage-4-综合能力" class="headerlink" title="Stage 4 - 综合能力"></a>Stage 4 - 综合能力</h3><p>在掌握基本能力以后你已经可以编写简单的脚本程序来临时代替 fping、nmap 等工具来辅助你进行渗透测试（当然这并不是刚需），一入网安深似海，我的路线并不一定是最完美的，但既然我都可以总结出来，相信你也可以在此基础上更加精进来达到更高的境界。说是综合能力，其实在这时已经可以查漏补缺，弥补之前欠缺的知识，如完善理解 SQL注入的原理，通过 SQLi-Labs 等靶场进一步学习 SQL 注入，或是通过 Upload-Labs 靶场进一步学习绕过文件上传限制的方式，从这里开始学习就变得更加需要深度和广度，不妨根据前辈们的技能树，选择必备的技能以及感兴趣的方向，继续深度的学习，这里放几个我收集到的技能树，或许能给你之后的安全学习带来一点帮助</p><ul><li><a href="https://www.hackjie.com/1500.html">黑客街 web渗透学习路线图</a></li><li><a href="https://evilcos.me/security_skill_tree_basic/index.html">余弦的安全技能树简版</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;注意：此文不适合进阶学习，仅适合入门&lt;br&gt;很久以前学习过的一些网络安全相关知识，列出了一些知识点、大致的规划；方便快速上手]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;笔记不是刚需，但是当你第二次遇到同样简单的问题的时候，你还需要通过搜索引擎去查</summary>
      
    
    
    
    <category term="网络安全" scheme="http://icekylin.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    <category term="编程开发" scheme="http://icekylin.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="学习经历" scheme="http://icekylin.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%BB%8F%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://icekylin.github.io/2022/11/15/hello-world/"/>
    <id>http://icekylin.github.io/2022/11/15/hello-world/</id>
    <published>2022-11-15T02:35:47.358Z</published>
    <updated>2022-11-15T02:35:47.358Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
